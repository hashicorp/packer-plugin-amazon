# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

name: "AWS Acceptance Tests"

env:
  GOMAXPROCS: 32
  AWS_POLL_DELAY_SECONDS: 10
  AWS_TIMEOUT_SECONDS: 3600
  PACKER_ACC: 1

on:
  schedule:
    - cron: '0 4 * * SUN'
  workflow_dispatch:
    inputs:
      branch:
        description: "A branch or SHA"
        default: 'main'
        required: false
      run_pattern:
        description: "The pattern to run tests on"
        default: "TestAcc"
        required: false

permissions:
  contents: read

jobs:
  get-go-version:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: 'Determine Go version'
        id: get-go-version
        run: |
          echo "Found Go $(cat .go-version)"
          echo "go-version=$(cat .go-version)" >> "$GITHUB_OUTPUT"

  ebs-acc-tests:
    needs:
      - get-go-version
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    name: AWS EBS Acceptance tests
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - name: "Compile/install the plugin on the current branch"
        run: |
          make dev
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: "${{ secrets.AWS_ACC_TEST_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_ACC_TEST_KEY_SECRET }}"
          aws-region: "${{ secrets.AWS_ACC_TEST_REGION }}"
          role-to-assume: "${{ secrets.AWS_ACC_TEST_ROLE }}"
          role-session-name: "packer-aws-acceptance-tests"
          role-duration-seconds: 21600 # 6h
      - run: |
          echo "Testing with Go ${{ needs.get-go-version.outputs.go-version }}"
          go test \
            -timeout 5h \
            -count 1 \
            -run "${{ github.event.inputs.run_pattern }}" \
            ./builder/ebs
      - run: zip ebs_failure_logs.zip builder/ebs/*txt
        if: ${{ failure() }}
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ failure() }}
        with:
          name: "ebs_failure_logs.zip"
          path: "ebs_failure_logs.zip"
          retention-days: 5

  ebssurrogate-acc-tests:
    needs:
      - get-go-version
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    name: AWS EBS Surrogate Acceptance tests
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - name: "Compile/install the plugin on the current branch"
        run: |
          make dev
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: "${{ secrets.AWS_ACC_TEST_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_ACC_TEST_KEY_SECRET }}"
          aws-region: "${{ secrets.AWS_ACC_TEST_REGION }}"
          role-to-assume: "${{ secrets.AWS_ACC_TEST_ROLE }}"
          role-session-name: "packer-aws-acceptance-tests"
          role-duration-seconds: 14400 # 4h
      - run: |
          echo "Testing with Go ${{ needs.get-go-version.outputs.go-version }}"
          go test \
            -timeout 1h \
            -count 1 \
            -run "${{ github.event.inputs.run_pattern }}" \
            ./builder/ebssurrogate
      - run: zip ebssurrogate_failure_logs.zip builder/ebssurrogate/*txt
        if: ${{ failure() }}
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ failure() }}
        with:
          name: "ebssurrogate_failure_logs.zip"
          path: "ebssurrogate_failure_logs.zip"
          retention-days: 5

  datasource-acc-tests:
    needs:
      - get-go-version
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    name: AWS Datasource Acceptance tests
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - name: "Compile/install the plugin on the current branch"
        run: |
          make dev
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: "${{ secrets.AWS_ACC_TEST_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_ACC_TEST_KEY_SECRET }}"
          aws-region: "${{ secrets.AWS_ACC_TEST_REGION }}"
          role-to-assume: "${{ secrets.AWS_ACC_TEST_ROLE }}"
          role-session-name: "packer-aws-acceptance-tests"
          role-duration-seconds: 14400 # 4h
      - run: |
          echo "Testing with Go ${{ needs.get-go-version.outputs.go-version }}"
          go test \
            -timeout 1h \
            -count 1 \
            -run "${{ github.event.inputs.run_pattern }}" \
            ./datasource/**
      - run: | 
          zip datasource_ami_failure_logs.zip ./datasource/ami/*txt || true
          zip datasource_parameterstore_failure_logs.zip ./datasource/parameterstore/*txt || true
          zip datasource_secretsmanager_failure_logs.zip ./datasource/secretsmanager/*txt || true
        if: ${{ failure() }}
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ failure() }}
        with:
          name: "datasource_ami_failure_logs.zip"
          path: "datasource_ami_failure_logs.zip"
          retention-days: 5
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ failure() }}
        with:
          name: "datasource_parameterstore_failure_logs.zip"
          path: "datasource_parameterstore_failure_logs.zip"
          retention-days: 5
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ failure() }}
        with:
          name: "datasource_secretsmanager_failure_logs.zip"
          path: "datasource_secretsmanager_failure_logs.zip"
          retention-days: 5


  slack-notify:
    permissions:
      contents: none
    needs:
      - get-go-version
      - ebs-acc-tests
      - ebssurrogate-acc-tests
      - datasource-acc-tests
    if: always() && (
      needs.ebs-acc-tests.result == 'failure' ||
      needs.ebssurrogate-acc-tests.result == 'failure' ||
      needs.datasource-acc-tests.result == 'failure'
      )
    runs-on: ubuntu-latest
    steps:
      - name: Collect failed jobs
        id: collect-failures
        run: |
          failed=""
          if [ "${{ needs.ebs-acc-tests.result }}" == "failure" ]; then
            failed="$failed ebs-acc-tests"
          fi
          if [ "${{ needs.ebssurrogate-acc-tests.result }}" == "failure" ]; then
            failed="$failed ebssurrogate-acc-tests"
          fi
          if [ "${{ needs.datasource-acc-tests.result }}" == "failure" ]; then
            failed="$failed datasource-acc-tests"
          fi
          echo "failed-jobs=$failed" >> "$GITHUB_OUTPUT"

      - name: Send slack notification on failure
        uses: slackapi/slack-github-action@37ebaef184d7626c5f204ab8d3baff4262dd30f0 # v1.27.0
        with:
          payload: |
            {
              "text": ":alert: The following acceptance test jobs *FAILED*: `${{ steps.collect-failures.outputs.failed-jobs }}` :alert:",
              "attachments": [
                {
                  "color": "#C41E3A",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Branch: `${{ github.ref_name }}`\nRef: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nWorkflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
